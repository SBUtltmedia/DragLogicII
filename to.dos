### TODOs for Drag_Logic_II

#### Easy
- [ ] Add comments to the functions in `parser.js` to improve readability.
- [ ] Enhance the styling of draggable elements in `css/style.css` for better visual feedback.
- [ ] Add a "Help" or "Instructions" modal in `index.html` and `js/ui.js`.
- [ ] Review `globals.js` and document the purpose of each global variable.

#### Medium
- [x] Improve feedback system to indicate resolved errors.
- [x] Implement fading feedback messages.
- [ ] Implement unit tests for the logic validation in `proof.js`.
- [ ] Refactor `drag-drop.js` to use modern JavaScript features (e.g., ES6 classes, modules).
- [ ] Add at least two new problem sets to `problems.js`.
- [x] Compare `legacy.html` with `index.html` and migrate any missing features.

#### Hard
- [ ] Implement a feature to allow users to save their current proof state and load it later.
- [ ] Redesign the UI to be more responsive for different screen sizes.
- [ ] Implement full FOL support, adhering to KMM syntax and rules.
    - [ ] Implement Negative Free Logic (atomic sentences with non-denoting terms are false).
    - [ ] Restrict quantification rules (UI and EG) to denoting terms.
    - [x] Implement definite descriptions with the iota (Î¹) operator.
    - [ ] Add KMM-specific axioms (e.g., Lambert axiom).
    - [ ] Create a new problem set for KMM-specific logic.
